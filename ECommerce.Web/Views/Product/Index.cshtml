@model List<ECommerce.Web.Models.ProductViewModel>
@{
    ViewData["Title"] = "Manage Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <partial name="_SidebarPartial" />
    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
        <h2>@ViewData["Title"]</h2>
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
        }
        <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#productModal" onclick="loadCreateForm()">Add Product</button>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>SKU</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model)
                {
                    <tr>
                        <td>
                            @if (!string.IsNullOrEmpty(product.ImageBase64))
                            {
                                <img src="data:image/jpeg;base64,@product.ImageBase64" alt="@product.Name" class="img-thumbnail" style="max-width: 50px;" />
                            }
                            else
                            {
                                <span>No Image</span>
                            }
                        </td>
                        <td>@product.Name</td>
                        <td>@product.Price.ToString("C")</td>
                        <td>@product.SKU</td>
                        <td>@product.Status</td>
                        <td>
                            <button class="btn btn-sm btn-warning" onclick="loadEditForm(@product.Id)">Edit</button>
                            <button class="btn btn-sm btn-danger" onclick="deleteProduct(@product.Id)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </main>
</div>

<!-- Modal for Add/Edit -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel">Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="productFormContainer">
                <!-- Form will be loaded via AJAX -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function loadCreateForm() {
            $.get('/Product/Create', function (data) {
                $('#productFormContainer').html(data);
                $('#productModalLabel').text('Add Product');
                $('#productModal').modal('show');
                $.validator.unobtrusive.parse('#productForm');
            });
        }

        function loadEditForm(id) {
            $.get('/Product/Edit/' + id, function (data) {
                $('#productFormContainer').html(data);
                $('#productModalLabel').text('Edit Product');
                $('#productModal').modal('show');
                $.validator.unobtrusive.parse('#productForm');
            });
        }

        function deleteProduct(id) {
            if (confirm('Are you sure you want to delete this product?')) {
                $.ajax({
                    url: '/Product/Delete/' + id,
                    type: 'POST',
                    headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                    success: function (result) {
                        if (result.success) {
                            location.reload();
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function () {
                        alert('Error deleting product.');
                    }
                });
            }
        }

        $(document).ready(function () {
            $('#productFormContainer').on('submit', '#productForm', function (e) {
                e.preventDefault();
                var formData = new FormData(this);
                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                    success: function (result) {
                        if (result.success) {
                            $('#productModal').modal('hide');
                            location.reload();
                        } else {
                            $('#productFormContainer').html(result);
                            $.validator.unobtrusive.parse('#productForm');
                        }
                    },
                    error: function () {
                        alert('Error saving product.');
                    }
                });
            });
        });
    </script>
}